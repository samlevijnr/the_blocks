<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>TheHtmls</groupId>
  <artifactId>Blocks</artifactId>
  <packaging>war</packaging>
  <version>0.0.1-SNAPSHOT</version>
  <name>Blocks Maven Webapp</name>
  <url>http://maven.apache.org</url>


	<build>
		<finalName>Blocks</finalName>
	</build>


	<dependencies>

		<!-- <dependency> <groupId>junit</groupId> <artifactId>junit</artifactId> 
			<version>3.8.1</version> <scope>test</scope> </dependency> -->

		<!-- (1) To create a .war file with Maven using the goal: 'install': this 
			Servlet library of jars is required, even they are present in the Server. 
			(I believe because they are constantly in use, they can not be used!) (Also, 
			it may require(designed to get) from its dependency library) (2) It is also 
			required, if creating a web project without the Server in the eclipse. (3) 
			You do not need these jars if the server is included in the project as the 
			server contains the necessary servlet jars required. https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>4.0.0</version>
			<scope>provided</scope>
		</dependency>

	</dependencies>



	<!-- To create a .war file with Maven using the goal: 'install': 1) insert 
		the <maven.compiler.source>1.8</maven.compiler.source> <maven.compiler.target>1.8</maven.compiler.target> 
		This must be in the properties (that is for development) tag and not in dependencies 
		tag (that is for testing scripts) -->

	<properties>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
	</properties>
  
</project>
